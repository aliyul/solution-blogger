// File: autoEvergreenHybrid.js
console.log("🚀 AutoEvergreenHybrid v8 Hybrid — Mode GET Stabil + Cache + Retry");

(async function AutoSEOBuilderUltra() {
  const API_ENDPOINT = "https://script.google.com/macros/s/AKfycbzkEpy3IKt6GWDIVhzLDKI0V58zBpy9uWucxL84I393ghP--_wBaADbZc6-KNXFV88d/exec"; //API GOOGLE SCRIPT YG KITA BUAT
  const CACHE_KEY = "AutoEvergreenHybridCache";
  const CACHE_TTL_HOURS = 12; // cache 12 jam

  const h1El = document.querySelector("h1");
  const h1 = h1El?.innerText || "(no H1)";
  const content = (document.querySelector("article,.post-body,main")?.innerText || "").slice(0, 4000);

  console.log("🧩 Judul:", h1);
  console.log("📄 Cuplikan:", content.slice(0, 120));

  // ====== Fungsi retry fetch ======
  async function fetchWithRetry(url, options = {}, retries = 3, delay = 1000) {
    for (let i = 0; i <= retries; i++) {
      try {
        const res = await fetch(url, options);
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        return await res.json();
      } catch (err) {
        if (i < retries) {
          console.warn(`⚠️ Retry #${i+1} setelah error:`, err);
          await new Promise(r => setTimeout(r, delay));
        } else {
          throw err;
        }
      }
    }
  }

  // ====== Cek cache ======
  function getCache() {
    try {
      const raw = localStorage.getItem(CACHE_KEY);
      if (!raw) return null;
      const obj = JSON.parse(raw);
      if (new Date(obj.timestamp) > new Date(Date.now() - CACHE_TTL_HOURS*3600*1000)) {
        return obj.data;
      }
    } catch(e){ console.warn("⚠️ Cache error:", e); }
    return null;
  }

  function setCache(data) {
    try {
      localStorage.setItem(CACHE_KEY, JSON.stringify({ data, timestamp: new Date() }));
    } catch(e){ console.warn("⚠️ Gagal simpan cache:", e); }
  }

  // ====== Ambil data ======
  let data = getCache();
  if (!data) {
    try {
      const params = new URLSearchParams({ h1, content });
      data = await fetchWithRetry(`${API_ENDPOINT}?${params.toString()}`, { method: "GET", mode: "cors" });
      if (!data.ok) throw new Error(data.error || "Respons tidak valid");
      setCache(data);
      console.log("✅ Data diambil dari server dan disimpan ke cache");
    } catch(e) {
      console.error("❌ Gagal ambil data:", e);
      return;
    }
  } else {
    console.log("♻️ Data diambil dari cache");
  }

  const typeKonten = data.typeKonten || "SEMI-EVERGREEN";
  console.log("📊 Jenis Konten:", typeKonten);

  // ======= Tampilan otomatis di halaman =======
  const metaBlocks = document.querySelectorAll(".post-author, .post-timestamp, .post-updated");
  const authorEl = document.querySelector(".post-author");
  const updatedEl = document.querySelector(".post-updated");

  if (typeKonten === "EVERGREEN") {
    metaBlocks.forEach((el) => (el.style.display = "none"));
  } else if (typeKonten === "SEMI-EVERGREEN") {
    if (authorEl && updatedEl) {
      authorEl.style.display = "inline";
      updatedEl.style.display = "inline";
      updatedEl.style.marginLeft = "8px";
      updatedEl.textContent = `· Diperbarui: ${new Date().toLocaleDateString("id-ID")}`;
    }
  } else if (typeKonten === "NON-EVERGREEN") {
    const dateDiv = document.createElement("div");
    dateDiv.textContent = `🕒 Diperbarui: ${new Date().toLocaleDateString("id-ID")}`;
    dateDiv.style.fontSize = "0.85em";
    dateDiv.style.color = "#666";
    dateDiv.style.marginBottom = "4px";
    h1El?.parentNode?.insertBefore(dateDiv, h1El);
  }

  // ======= Info update berikut =======
  let nextUpdate = new Date();
  if (typeKonten === "EVERGREEN") nextUpdate.setMonth(nextUpdate.getMonth() + 12);
  else if (typeKonten === "SEMI-EVERGREEN") nextUpdate.setMonth(nextUpdate.getMonth() + 6);
  else nextUpdate.setMonth(nextUpdate.getMonth() + 3);

  const info = document.createElement("div");
  info.innerHTML = `<b>${typeKonten}</b> — pembaruan berikutnya: <b>${nextUpdate.toLocaleDateString("id-ID")}</b>`;
  info.style.fontSize = "0.85em";
  info.style.color = "#555";
  info.style.margin = "6px 0 8px 0";
  info.setAttribute("data-nosnippet", "true");
  h1El?.insertAdjacentElement("afterend", info);

  window.typeKonten = typeKonten;
  window.nextUpdateStr = nextUpdate.toLocaleDateString("id-ID");

})();
